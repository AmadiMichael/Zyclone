

/**
 * Houses
 * - Withdraw external function
 */

#include "./Utils.huff"


/**
 * @dev Withdraw a deposit from the contract. `proof` is a zkSNARK proof data, and input is an array of circuit public inputs
 *
 * Calldata layout
 * 
 * 0x00 <-> 0x04: bytes4(keccak256("withdraw((uint256[2],uint256[2][2],uint256[2]),bytes32,bytes32,address,address,uint256)"))
 * 0x04 <-> 0x24: _pA[0]
 * 0x24 <-> 0x44: _pA[1]
 * 0x44 <-> 0x64: _pB[0][0]
 * 0x64 <-> 0x84: _pB[0][1]
 * 0x84 <-> 0xa4: _pB[1][0]
 * 0xa4 <-> 0xc4: _pB[1][1]
 * 0xc4 <-> 0xe4: _pC[0]
 * 0xe4 <-> 0x104: _pC[1]
 * 0x104 <-> 0x124: _root
 * 0x124 <-> 0x144: _nullifierHash
 * 0x144 <-> 0x164: _recipient
 * 0x164 <-> 0x184: _relayer
 * 0x184 <-> 0x1a4: _fee
 */
#define macro WITHDRAW() = {
    // make function non reentrant
    NON_REENTRANT()
}